/* #include<iostream>
 using namespace std;

void calculate_leader(int arr[],int size)
{
    int i,j;
    for(i=0; i<size; i++)
    {
        for(j=i+1;j<size;j++)
        {
            if(arr[i] <= arr[j])
            {
                break;
            }
        }
        if(j == size)
        {
            cout<<arr[i]<<" ";
        }
    }
   


}
int main()
{
    int size;
    cout<<"Size of ARRAY: ";
    cin>>size;
    cout<<size<<endl;
   
    int arr[6];
    
   cout<<"Enter the element of the array";
    for(int i=0;i<size;i++)
    {
        cin>>arr[i];
    }
    cout<<"\n"<<"input array is: "<<"\n";
      for(int i=0;i<size;i++)
    {
       cout<<arr[i]<<"\t";
    }
    cout<<"\n";
    
    calculate_leader(arr,6);

    return 0;
}
*/
//print the mean and the max from the array.(by bubble sort)

/*#include<iostream>
#include<math.h>
using namespace std;

int main()
{
    int arr[5]={1,9,7,0,5};
    int temp;
    for(int i=0;i<5;i++)
    {
        for(int j=i+1;j<5;j++)
        {
            if(arr[i]>arr[j])
            {
                temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    cout<<"output of the array: "<<"\n";
    for(int i=0;i<5;i++)
    {
        cout<<arr[i]<<"\t";
    }
    cout<<"\n";
    cout<<"Mean Element: "<<arr[0];
    cout<<"\n";
    cout<<"Max Element: "<<arr[4];
    return 0;
}*/
// time-complexity: n^2(not sure);

//second approach 

/*#include<iostream>
#include<climits>

using namespace std;
int main()
{
int n;

cout<<"Enter the size of the array: ";

cin>>n;
int arr[n];

for(int i=0;i<n;i++)
{
    cin>>arr[i];
}

int  MinElement=INT_MAX;
int MaxElement=INT_MIN;


        for(int i=0;i<n;i++)
         {
             if(arr[i] > MinElement)
            {
                 MaxElement=arr[i];
            }
            if(arr[i] < MinElement)
            {
                MinElement=arr[i];
            }
        }
cout<<"\n";
cout<<"Min: "<<MinElement;
cout<<"\n";
cout<<"Max: "<<MaxElement;
    return 0;
}*/

//time complexity: o(n)

//3)approach
/*#include<iostream>
#include<climits>

using namespace std;
int main()
{
int n;

cout<<"Enter the size of the array: ";

cin>>n;
int arr[n];

for(int i=0;i<n;i++)
{
    cin>>arr[i];
}

int  MinElement=INT_MAX;
int MaxElement=INT_MIN;


        for(int i=0;i<n;i++)
         {
            MaxElement=max(MaxElement,arr[i]);
            MinElement=min(MinElement,arr[i]);
             
        }
cout<<"\n";
cout<<"Min: "<<MinElement;
cout<<"\n";
cout<<"Max: "<<MaxElement;
    return 0;
}*/

//time complexity: o(n);
